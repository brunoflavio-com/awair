plugins {
    id("groovy")
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.0.1"
    id("io.micronaut.aot") version "4.0.1"
}

version = "0.1"
group = "com.brunoflavio.awair"

processResources.dependsOn ':awair-client:copyStaticContent'
inspectRuntimeClasspath.dependsOn ':awair-client:copyStaticContent'


task cleanStatic(type: Delete) {
    delete 'src/main/resources/static'
}

clean.dependsOn 'cleanStatic'

tasks.named("dockerfile") {
    instruction """ENV MICRONAUT_ENVIRONMENTS=production """
    instruction """VOLUME /db"""
}

tasks.named('dockerBuild') {
    images = ["${rootProject.name}"]
}
repositories {
    maven {
        url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
        mavenContent { snapshotsOnly() }
    }
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut.groovy:micronaut-runtime-groovy")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.validation:micronaut-validation")
    implementation("jakarta.validation:jakarta.validation-api")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    compileOnly("io.micronaut.serde:micronaut-serde-processor")
    compileOnly("jakarta.persistence:jakarta.persistence-api:3.0.0")
    compileOnly("io.micronaut.validation:micronaut-validation-processor")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.h2database:h2")
    implementation("io.projectreactor:reactor-core")
    testImplementation("io.projectreactor:reactor-test")
    testImplementation("org.apache.groovy:groovy-json")
}


application {
    mainClass.set("com.brunoflavio.awair.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("com.brunoflavio.awair.*")
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}

